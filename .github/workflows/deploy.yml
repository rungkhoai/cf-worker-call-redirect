# File: .github/workflows/deploy.yml
name: Deploy Worker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # -----------------------------------
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # -----------------------------------
      # 2. Setup Node.js v√† Wrangler v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Wrangler v4
        run: npm install --save-dev wrangler@4

      # -----------------------------------
      # 3. L·∫•y Worker name t·ª´ wrangler.toml
      - name: Get Worker name from wrangler.toml
        id: worker_name
        run: |
          NAME=$(grep '^name =' wrangler.toml | cut -d '"' -f2)
          echo "worker_name=$NAME" >> $GITHUB_OUTPUT
          echo "‚úÖ Worker name ƒë√£ l·∫•y: $NAME"

      # -----------------------------------
      # 4. Ki·ªÉm tra Workers.dev subdomain
      - name: Ensure Workers.dev subdomain enabled
        run: |
          ACCOUNT_ID=${{ secrets.CF_ACCOUNT_ID }}
          AUTH="Authorization: Bearer ${{ secrets.CF_API_TOKEN }}"
          CURRENT=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/$ACCOUNT_ID/workers/subdomain" \
            -H "$AUTH" -H "Content-Type: application/json")
          SUBDOMAIN=$(echo "$CURRENT" | jq -r '.result.subdomain')
          if [ "$SUBDOMAIN" = "null" ] || [ -z "$SUBDOMAIN" ]; then
            echo "‚ö° Ch∆∞a c√≥ workers.dev subdomain, t·∫°o m·ªõi..."
            curl -s -X PUT "https://api.cloudflare.com/client/v4/accounts/$ACCOUNT_ID/workers/subdomain" \
              -H "$AUTH" -H "Content-Type: application/json" \
              --data '{"subdomain":"rungkhoai"}' # Ch·ªçn domain ·ªü ƒë√¢y
          else
            echo "‚úÖ Subdomain ƒë√£ c√≥: $SUBDOMAIN.workers.dev"
          fi

      - name: Get Workers.dev subdomain
        id: subdomain
        run: |
          ACCOUNT_ID=${{ secrets.CF_ACCOUNT_ID }}
          AUTH="Authorization: Bearer ${{ secrets.CF_API_TOKEN }}"
          SUBDOMAIN=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/$ACCOUNT_ID/workers/subdomain" \
            -H "$AUTH" -H "Content-Type: application/json" | jq -r '.result.subdomain')
          echo "subdomain=$SUBDOMAIN" >> $GITHUB_OUTPUT
          echo "‚úÖ Workers.dev subdomain: $SUBDOMAIN"

      # -----------------------------------
      # 5. Ki·ªÉm tra v√† t·∫°o KV namespace SALES_PHONES
      - name: Ensure KV namespace exists
        id: kv_namespace
        run: |
          ACCOUNT_ID=${{ secrets.CF_ACCOUNT_ID }}
          TOKEN=${{ secrets.CF_API_TOKEN }}

          # L·∫•y danh s√°ch namespaces
          EXISTING=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/$ACCOUNT_ID/storage/kv/namespaces" \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json")

          NAMESPACE_ID=$(echo "$EXISTING" | jq -r '.result[] | select(.title=="SALES_PHONES") | .id')

          if [ -z "$NAMESPACE_ID" ] || [ "$NAMESPACE_ID" = "null" ]; then
            echo "‚ûï KV namespace SALES_PHONES ch∆∞a c√≥, t·∫°o m·ªõi..."
            CREATED=$(curl -s -X POST "https://api.cloudflare.com/client/v4/accounts/$ACCOUNT_ID/storage/kv/namespaces" \
              -H "Authorization: Bearer $TOKEN" \
              -H "Content-Type: application/json" \
              --data '{"title":"SALES_PHONES"}')
            NAMESPACE_ID=$(echo "$CREATED" | jq -r '.result.id')
          else
            echo "‚úÖ KV namespace SALES_PHONES ƒë√£ c√≥: $NAMESPACE_ID"
          fi

          echo "SALES_PHONES_NAMESPACE_ID=$NAMESPACE_ID" >> $GITHUB_ENV
          echo "id=$NAMESPACE_ID" >> $GITHUB_OUTPUT

      # -----------------------------------
      # Ki·ªÉm tra secret CSV_SALES_PHONE
      - name: Check CSV_SALES_PHONE secret
        run: |
          echo "CSV_SALES_PHONE preview: ${CSV_SALES_PHONE:0:10}..."
        env:
          CSV_SALES_PHONE: ${{ secrets.CSV_SALES_PHONE }}

      # -----------------------------------
      # 6. Patch wrangler.toml v·ªõi ID th·ª±c
      - name: Patch wrangler.toml KV ID
        run: |
          sed -i "s|\${CSV_SALES_PHONE}|$(printf '%s' "$CSV_SALES_PHONE" | sed -e 's/[&/\]/\\&/g')|" wrangler.toml
          sed -i "s/\${SALES_PHONES_NAMESPACE_ID}/$SALES_PHONES_NAMESPACE_ID/" wrangler.toml
          echo "‚úÖ wrangler.toml ƒë√£ ƒë∆∞·ª£c patch v·ªõi KV namespace ID th·ª±c $SALES_PHONES_NAMESPACE_ID v√† $CSV_SALES_PHONE"
        env:
          CSV_SALES_PHONE: ${{ secrets.CSV_SALES_PHONE }}

      # -----------------------------------
      # 7. Deploy Worker v·ªõi Wrangler v4
      - name: Deploy Worker with Wrangler v4
        run: npx wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          SALES_PHONES_NAMESPACE_ID: ${{ steps.kv_namespace.outputs.id }}
          CSV_SALES_PHONE: ${{ secrets.CSV_SALES_PHONE }}

      # -----------------------------------
      # 8. Ki·ªÉm tra v√† t·∫°o/update DNS record
      - name: Ensure DNS record exists for this Project
        run: |
          ZONE_ID=${{ secrets.CF_ZONE_ID }}
          API="https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records"
          AUTH="Authorization: Bearer ${{ secrets.CF_API_TOKEN_DNS }}"
          TARGET="${{ steps.worker_name.outputs.worker_name }}.${{ steps.subdomain.outputs.subdomain }}.workers.dev"

          echo "‚û°Ô∏è S·∫Ω tr·ªè subdomain v·ªÅ $TARGET"

          # L·∫•y ID record hi·ªán t·∫°i
          RECORD_ID=$(curl -s -X GET "$API?type=CNAME&name=call.rungkhoai.com" \
            -H "$AUTH" -H "Content-Type: application/json" | jq -r '.result[0].id')

          if [ "$RECORD_ID" != "null" ] && [ -n "$RECORD_ID" ]; then
            echo "üîÑ DNS record t·ªìn t·∫°i, c·∫≠p nh·∫≠t..."
            curl -s -X PUT "$API/$RECORD_ID" \
              -H "$AUTH" -H "Content-Type: application/json" \
              --data '{"type":"CNAME","name":"call","content":"'"$TARGET"'","ttl":1,"proxied":true}'
          else
            echo "‚ûï DNS record ch∆∞a c√≥, t·∫°o m·ªõi..."
            curl -s -X POST "$API" \
              -H "$AUTH" -H "Content-Type: application/json" \
              --data '{"type":"CNAME","name":"call","content":"'"$TARGET"'","ttl":1,"proxied":true}'
          fi
